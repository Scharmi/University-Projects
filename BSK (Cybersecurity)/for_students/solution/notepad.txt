Zadanie 1
Najpierw zauważyłem, że dla dowolnego k bity starsze niż k w parametrach a i c nie mają znaczenia dla k ostatnich bitów nowo wygenerowanej liczby.
Zauważyłem też że sufiks parametru a danego rozmiaru jednoznacznie wyznacza sufiks tego samego rozmiaru parametru c.
Wiadomo też że jeśli pewna para sufiksów (tej samej długości) parametrów a i c nie daje poprawnych wyników (sufiksów otrzymanych liczb) na otrzymanych z serwera liczbach, to dowolne parametry a i c o takich sufiksach nie będą możliwymi parametrami a i c.
Znając te fakty rekurencyjnie wyznaczam od tyłu kolejne bity możliwych parametrów a i c.
Za każdym razem sprawdzając czy wygenerowane sufiksy generują oczekiwane sufiksy kolejnych liczb.
Na końcu mam więc wyznaczona pewną parę (a,c) która w 4 krokach (tyle ilu wynik znamy) daje te same wyniki co para wygenerowane przez serwer.
Wyznaczamy wartość wygenerowaną w kolejnym kroku. W dużej większości przypadków serwer odpowiada flagą, zaś jeśli zdarzy się że wygenerowana przez nas para działa przez 4 kroki ale w piątym już nie, to do skutku powtarzamy algorytm ponownie łącząc się z serwerem.

Zadanie 2
Tutaj korzystam z faktu że znam iv i przekazuję je do dekrypcji mojej wiadomości po stronie serwera.
Jako że wiem że z danym iv odebrana zaszyfrowana wiadomość po dekrypcji da “Hello”, a ostatnim krokiem dekrypcji jest xor z iv, to modyfikuję dane iv xorując je z bajtami z “Hello” i z “flag?” żeby potem po zxorowaniu ze zmodyfikowanym iv serwer otrzymał wiadomość zaczynającą się na “flag?” i przesłał mi zaszyfrowaną flagę
